"""
File: plot.py

Description: A Python file for plotting figures
"""
from scipy.integrate import simps

from src.library.refs.basis import *
from src.library.refs.seg import *

def numerical_convergence(solutions):
    """
    Compute numerical order of convergence
    """
    # Calculate n for each unique pair of (epsilon, delta x) values
    s_values = []
    abs_errors = []
    for sol in range(len(solutions) - 2):
        y1, y2, y3 = solutions[sol], solutions[sol + 1], solutions[sol + 2]
        # h1, h2, h3 = h[i], h[j], h[k]

        e1 = abs(y2 - y1)
        e2 = abs(y3 - y2)

        # Using the formula provided to calculate s for each pair
        s = np.log2(e1 / e2)
        # n = (np.log(epsilon_1) - np.log(epsilon_2)) / (np.log(delta_x_1) - np.log(delta_x_2))
        s_values.append(s)

        abs_error = e1 / (1. - 2. ** (-s))
        abs_errors.append(abs_error)

    # Calculate the average s
    average_s = np.mean(s_values)

    # for sol in range(4):
    #     y1, y2 = solutions[sol], solutions[sol + 1]
    #     e1 = abs(y2 - y1)
    #
    #     abs_error = e1 / ((1. - 2. ** (-average_s)) * (2. ** (-average_s)) ** sol)
    #     abs_errors.append(abs_error)

    # Output the result
    print(f"Calculated s values for each combination: {s_values}.")
    print(f"Average value of s: {average_s}.")
    print(f"Calculated absolute error for N, 2N, 3N, and 4N: {abs_errors}.")

    return average_s, abs_errors

""" Plotting parameters and visualisations """
lw = 1.25
ms = 5.
x_left = -1.
x_right = 1.
y_bottom = -0.6
y_top = 1.
marker_style = ['ro', 'gv', 'b<', 'k*', 'rx', 'g^', 'b>', 'ks']
plt.rc('text', usetex=True)
path = os.path.dirname(__file__)

n_e = [514, 1853, 6428, 23609, 71966]
h = [20, 10, 5, 2.5, 1.25]
diff_u = [0.199129403366789, 0.2165228227989058, 0.21467486185486634, 0.212988422639274, 0.21301528492291044]
sadr_u1 = [0.10779115595615185, 0.0837870513156903, 0.06287473327625018, 0.07507391002539282, 0.0773202011479609]
sadr_u2 = [0.7104412566759283, 0.7727211683200571, 0.7884800984489523, 0.7895499011852876, 0.7892200742871829]

plt.xscale('log')
plt.yscale('log')
# plt.gca().invert_xaxis()

s1, errors1 = numerical_convergence(diff_u)
C = 0.000007
y = C * np.array(h[:-2]) ** s1

plt.plot(np.array(h[:-2]), y, 'k:', label=f'$s = {s1:.2f}$', lw=lw, ms=ms)
plt.plot(np.array(h[:-2]), errors1, 'rx', label=r'Diffusion', lw=lw, ms=ms)

s2, errors2 = numerical_convergence(sadr_u1)
C = 0.004
y = C * np.array(h[:-2]) ** s2

plt.plot(np.array(h[:-2]), y, 'k--', label=f'$s = {s2:.2f}$', lw=lw, ms=ms)
plt.plot(np.array(h[:-2]), errors2, 'bo', label=r'Advection-diffusion 1', lw=lw, ms=ms)

s3, errors3 = numerical_convergence(sadr_u2)
C = 0.00004
y = C * np.array(h[:-2]) ** s3

plt.plot(np.array(h[:-2]), y, 'k-', label=f'$s = {s3:.2f}$', lw=lw, ms=ms)
plt.plot(np.array(h[:-2]), errors3, 'g^', label=r'Advection-diffusion 2', lw=lw, ms=ms)

plt.legend(loc='best')
plt.xlabel(r'h [lengthscale]', usetex=True)
plt.ylabel(r'Errors', usetex=True)
plt.title(r'Numerical convergence of steady-state cases', usetex=True)
plt.grid()
plt.tick_params(axis='both', direction='in')
# plt.savefig(f'{path}/report/figures/ss_convergence.eps', dpi=1000)
plt.show()

plt.cla()
plt.clf()

time = np.array([900. * (i + 1) for i in range(40)])
rv_n = np.empty((3, 40), dtype=np.float64)
sv_n = np.empty((3, 40), dtype=np.float64)
rv_r = np.empty((3, 40), dtype=np.float64)
sv_r = np.empty((3, 40), dtype=np.float64)
rv_d = np.empty((3, 40), dtype=np.float64)
sv_d = np.empty((3, 40), dtype=np.float64)

""" Directed to north """
# 5k
rv_n[0] = [1.6397529527744432e-12, -1.440891596147922e-09, 2.487883063479443e-07, -3.453876638772047e-05, 0.004489727745550214, 0.04196453617108732, 0.127969981618253, 0.24385622410423882, 0.38304938579246706, 0.5573522502140396, 0.7804774935199332, 1.0616864309818392, 1.4054131678367423, 1.810950771034593, 2.271568312377502, 2.7737650822023365, 3.2971976254530437, 3.815560817181985, 4.298497518351003, 4.714404267950037, 5.033799300908155, 5.232764057893879, 5.2959027358203254, 5.218311621705475, 5.006208409763878, 4.676109397619904, 4.252705610843837, 3.7658167287709605, 3.246943400895795, 2.725967076713449, 2.2284645016324336, 1.7739408994793704, 1.3750870388678305, 1.037978534529346, 0.7629980986516673, 0.5461921252586325, 0.380771601025592, 0.2585183041068221, 0.17093714129072696, 0.11008065209026811]
sv_n[0] = [7.222283745528982, 12.026762347283064, 17.878988258751328, 25.782966987055268, 36.15928995696416, 49.32219779614077, 65.43390188287368, 84.43104200285433, 105.95987283396609, 129.33666864937246, 153.54790497796932, 177.3001560593781, 199.12159653769672, 217.50671403973269, 231.08569263685092, 238.79244353292626, 240.00278451338158, 234.61794068876003, 223.0778555584771, 206.30183169959912, 185.56761152569158, 162.350952896092, 138.15359482033088, 114.34715197541277, 92.0545952793621, 72.08148292859998, 54.89859746326606, 40.66860549522903, 29.30346822428782, 20.53722300542332, 14.000019069223375, 9.28284363314388, 5.9868758934079604, 3.7556717436603866, 2.2916301031295268, 1.3601046583028245, 0.7851858888498995, 0.44090645260310685, 0.24082176911178588, 0.1279445745408884]

# 2_5k
rv_n[1] = [3.015291592769934e-25, -1.6525972783455613e-18, 1.1140295012406924e-10, 2.848008283664951e-06, 0.00020430143561071178, 0.0018802387247722563, 0.006372148246179219, 0.01310793835971109, 0.021412502738573543, 0.03170841574581508, 0.04482386473089901, 0.06142199997233606, 0.08187627664770679, 0.10624513810630731, 0.13422437787885014, 0.16509697634655213, 0.1977153367124101, 0.23053803865993686, 0.26172992325896777, 0.2893213210391342, 0.3114093895530047, 0.32637380670960126, 0.33307310001210844, 0.3309886078846891, 0.32029085625753706, 0.3018165550551763, 0.27696051376430375, 0.2475018472919749, 0.21539449159295923, 0.18255609553874919, 0.15068638043916868, 0.12113738338654911, 0.09484617269753384, 0.07232860509069669, 0.05372303900085204, 0.038867189819722495, 0.027389873851901524, 0.0188015581364983, 0.012572091913667722, 0.008189257341803478]
sv_n[1] = [3.436187805849448, 5.2342683478387375, 7.659228566319626, 10.896046383130193, 15.076417504154087, 20.289988548723702, 26.559548396310827, 33.81545144963568, 41.87604710820812, 50.4397043788418, 59.093013297019475, 67.33748480582747, 74.63374036885534, 80.45842218969943, 84.36576359160232, 86.04385297312108, 85.35575379214012, 82.35796011481683, 77.29273678002087, 70.55578497525707, 62.64522046883831, 54.10098560790705, 45.444873882595715, 37.130235798052645, 29.507621313102106, 22.808935469919604, 17.14907926897789, 12.541291263417737, 8.920928528894795, 6.172270577754008, 4.15382027728467, 2.7190618464569796, 1.7312505628430679, 1.0721883385944742, 0.6458823672331389, 0.3784494669197031, 0.21569270145581748, 0.11957409071740033, 0.06447834107867725, 0.03381947379104309]

# 1_25k
rv_n[2] = [1.891664072390721e-34, -7.536023640301547e-20, 1.1626034528668618e-09, 4.28557164680881e-06, 0.00024236695783038563, 0.002093709135467041, 0.006941856860821874, 0.01416319661607863, 0.02306727116072834, 0.03411784361206481, 0.048194515480478, 0.06599843781199304, 0.08792205565788021, 0.11402072571357234, 0.14396138486677276, 0.17696958784121467, 0.2118116664349211, 0.24683529375587854, 0.2800776050643646, 0.3094361446773421, 0.332884224173748, 0.34870092098406436, 0.35567971127439546, 0.3532806435020228, 0.34169939543693323, 0.3218409507523257, 0.2952028020900814, 0.26368859411091006, 0.22938435504912696, 0.19433364008288062, 0.1603446121131904, 0.1288527534638976, 0.10085026549170183, 0.0768804269993624, 0.05708495346864879, 0.04128637141353333, 0.029085961034960032, 0.019960185760578234, 0.013343304933173358, 0.008689475021207028]
sv_n[2] = [3.772433822222615, 5.736227434411194, 8.39027430087684, 11.93157270817829, 16.503036563501443, 22.201547088536863, 29.050699674862692, 36.972966584445004, 45.76850133173606, 55.10666576036564, 64.53524972573862, 73.50986953548477, 81.44238761632135, 87.76309583474738, 91.98783141941439, 93.77914434090268, 92.99081082542416, 89.68754697264364, 84.13623510478423, 76.77031296691501, 68.13391797323678, 58.815765868138236, 49.38386021017082, 40.33088581636845, 32.03704999177208, 24.75311810365761, 18.602468318885276, 13.598003510397604, 9.668170844586689, 6.686190980314201, 4.497583782927562, 2.9427036623817546, 1.8727567411068655, 1.1592700120325352, 0.6980026693455592, 0.4087894754851405, 0.23286992291639633, 0.12903250646748451, 0.0695437205448997, 0.036457830483779645]

""" Directed at reading """
# 5k
rv_r[0] = [-2.2610427743557626e-12, 1.1688184639081381e-09, -5.3539951071019434e-08, 0.0033685146495217536, 0.15022901385432902, 0.7911718915262695, 1.7078247038990055, 2.5397232336034383, 3.4293216079686024, 4.605021076606858, 6.1366630473539505, 8.005960648505548, 10.164690766468421, 12.537676007668496, 15.015292523047508, 17.453668852442163, 19.683925415018845, 21.528550864939312, 22.822354409177642, 23.434648063128243, 23.28873846361833, 22.37493803512087, 20.754303217302333, 18.5520225510105, 15.941422510401011, 13.121430074754155, 10.291559136477437, 7.628780458325144, 5.269960248742299, 3.3021384125858617, 1.7611691063967605, 0.6376140642532446, -0.11237261393541864, -0.5539131006084492, -0.7606005928687001, -0.8039381090166207, -0.7460569786079934, -0.6358916427746596, -0.5083330970441664, -0.38551686057423495]
sv_r[0] = [3.8952469081251184, 5.942012625012541, 8.6975898783124, 12.376636900961525, 17.12978250209222, 23.059845589347187, 30.193756157809617, 38.45337762929027, 47.6330978420247, 57.390570080360966, 67.25584494956784, 76.66157322252133, 84.99317470168266, 91.65358324601229, 96.13341625389707, 98.07522318488736, 97.32058769455412, 93.9314727548403, 88.18181848913768, 80.52097329830282, 71.51573087447319, 61.781339541115564, 51.913083501890554, 42.42879622168451, 33.729477165524656, 26.080996472703163, 19.615758446219598, 14.350039250665404, 10.21101384931504, 7.067294573945631, 4.757807462462397, 3.1155210734203096, 1.9843831707083828, 1.2293973551993536, 0.7408526386594322, 0.43425533872093025, 0.24759010028750486, 0.13730842968169196, 0.07406926324918874, 0.038864839674523435]

# 2_5k
rv_r[1] = [2.7643050498904905e-24, 1.3478320278979045e-16, 3.6016895752570894e-08, 0.00024610003830195966, 0.014408632881966917, 0.12444357597627226, 0.41314546369841676, 0.8451591524343895, 1.3791536941497438, 2.041794812531716, 2.8855607892966346, 3.95280464278507, 5.267414941956589, 6.83302057765065, 8.629938370791113, 10.611994012700478, 12.705418018564028, 14.811232152686129, 16.811689765851305, 18.580497951876673, 19.99572652578433, 20.953624019731215, 21.381181425122396, 21.245332835238838, 20.557182589764736, 19.370508536985618, 17.77482091770723, 15.884219840326425, 13.823974164270735, 11.717002037119219, 9.672241841413005, 7.776346682538617, 6.08937874956044, 4.644411209707425, 3.4503279155949, 2.49674493077581, 1.75988585710834, 1.2083816891113808, 0.8082510058455932, 0.5266528359974288]
sv_r[1] = [3.8952469081251184, 5.942012625012541, 8.6975898783124, 12.376636900961525, 17.12978250209222, 23.059845589347187, 30.193756157809617, 38.45337762929027, 47.6330978420247, 57.390570080360966, 67.25584494956784, 76.66157322252133, 84.99317470168266, 91.65358324601229, 96.13341625389707, 98.07522318488736, 97.32058769455412, 93.9314727548403, 88.18181848913768, 80.52097329830282, 71.51573087447319, 61.781339541115564, 51.913083501890554, 42.42879622168451, 33.729477165524656, 26.080996472703163, 19.615758446219598, 14.350039250665404, 10.21101384931504, 7.067294573945631, 4.757807462462397, 3.1155210734203096, 1.9843831707083828, 1.2293973551993536, 0.7408526386594322, 0.43425533872093025, 0.24759010028750486, 0.13730842968169196, 0.07406926324918874, 0.038864839674523435]

# 1_25k
rv_r[2] = [1.9130714765672562e-33, -6.53429772832737e-18, 9.318096947229418e-08, 0.00027710954707875474, 0.014819090717378702, 0.12597643311192347, 0.41630870537533426, 0.8496947010679472, 1.3849622094837404, 2.0493302681991423, 2.895404346955973, 3.965425609748295, 5.283138799974477, 6.852007767569719, 8.652140454691226, 10.637111154847585, 12.732877723993774, 14.840200453190075, 16.841119464828026, 18.60921188089059, 20.022526855254355, 20.97741279793709, 21.401074198395726, 21.260747447172996, 20.567889227293268, 19.376633986516644, 17.776808251434115, 15.882752474029093, 13.819878710778656, 11.711146570562244, 9.665444920461294, 7.769308439658515, 6.082639793522574, 4.638339433196807, 3.445128747897466, 2.492487839656467, 1.756539130778064, 1.205848389791662, 0.8064008729889414, 0.5253471632173441]
sv_r[2] = [3.736317417666399, 5.680761509150255, 8.308959109711155, 11.815705375597023, 16.34245573794825, 21.985083609230273, 28.766884852006925, 36.611019166682155, 45.31953238011742, 54.564979264681924, 63.899566056811054, 72.78427177992222, 80.63679933825303, 86.8931480367775, 91.07406198301945, 92.84558056575244, 92.06309310584656, 88.79083535934342, 83.29318104422059, 75.99936624186721, 67.44817672847822, 58.222480272546605, 48.8845899944663, 39.92221224622209, 31.71167271050737, 24.501136723243953, 18.412657473407023, 13.458929566074028, 9.569054893148035, 6.617481721835054, 4.4512538341681935, 2.912316916691764, 1.8533709568112307, 1.1472401564046892, 0.6907413356942914, 0.40452611125980487, 0.2304350868636898, 0.12767990616313446, 0.06881282891545512, 0.03607366213343408]

lengthscale = [5, 2.5, 1.25]
a_ratio_r = []

for i in range(3):

    plt.plot(time / 3600., rv_r[i] / np.max(sv_r[i]), marker_style[i], label=f'UoR_{lengthscale[i]}', lw=lw, ms=ms)
    area = simps(rv_r[i] / np.max(sv_r[i]), time / 3600.) / simps(sv_r[i] / np.max(sv_r[i]), time / 3600.)
    a_ratio_r.append(area)

plt.plot(time / 3600., sv_r[-1] / np.max(sv_r[-1]), 'k-', label=f'Soton', lw=lw, ms=ms)
plt.legend(loc='best')
plt.xlabel(r'Time [hours]', usetex=True)
plt.ylabel(r'Non-dimensionalised pollutant concentration [-]', usetex=True)
plt.title(r'Pollutant concentration over time at Soton and UoR', usetex=True)
plt.grid()
plt.tick_params(axis='both', direction='in')
# plt.savefig(f'{path}/report/figures/pollutant_reading.eps', dpi=1000)
plt.show()

a_ratio_n = []

for i in range(3):

    plt.plot(time / 3600., rv_n[i] / np.max(sv_n[i]), marker_style[i], label=f'UoR_{lengthscale[i]}', lw=lw, ms=ms)
    area = simps(rv_n[i] / np.max(sv_n[i]), time / 3600.) / simps(sv_n[i] / np.max(sv_n[i]), time / 3600.)
    a_ratio_n.append(area)

plt.plot(time / 3600., sv_n[-1] / np.max(sv_n[-1]), 'k-', label=f'Soton', lw=lw, ms=ms)
plt.legend(loc='best')
plt.xlabel(r'Time [hours]', usetex=True)
plt.ylabel(r'Non-dimensionalised pollutant concentration [-]', usetex=True)
plt.title(r'Pollutant concentration over time at Soton and UoR', usetex=True)
plt.grid()
plt.tick_params(axis='both', direction='in')
# plt.savefig(f'{path}/report/figures/pollutant_north.eps', dpi=1000)
plt.show()

lengthscale = [10, 5, 2.5]

""" Data """
# 10k
rv_d[0] = [-5.814805139643149e-10, 2.9178448620567574e-09, -1.8923907160762595e-09, 1.687331579754254e-08, -1.2640740827709635e-07, 8.570760463914431e-07, -3.0705210541747133e-06, -2.7748589747152513e-05, -1.1647836111439182e-05, 0.00024104147302477004, 0.0012882920231575396, 0.004468359899779316, 0.009826546844890538, 0.01742436450632022, 0.03160142380662943, 0.06118660187878659, 0.10931916216371504, 0.18041090526975115, 0.27385771085636756, 0.3787582096670167, 0.4938698066666807, 0.6180061013781091, 0.7843745815634814, 0.9899829750859185, 1.1029893229027428, 1.1273693319907045, 1.1268521562999734, 1.1887823762723078, 1.400018789189634, 1.8273849483488136, 2.6768569215122286, 3.7721810772534052, 4.256358696309924, 4.217764836314183, 3.8791342901003363, 3.286363571312122, 2.56823322268193, 1.878555351491372, 1.3604939040966442, 1.0310441564469022]
sv_d[0] = [0.8541022975238479, 1.6021814570792405, 2.512293477788873, 3.695889759754172, 5.224666750422093, 7.153046504082015, 9.513575406593404, 12.253483625408707, 15.15433939823732, 18.078788312268514, 20.873467808209337, 23.495697056207796, 26.073866098678632, 28.332884334416615, 30.08803428524446, 31.429825029444622, 32.81846869821773, 33.894883779446985, 34.44787938909039, 34.130437144905294, 32.28040437228229, 29.2713894101496, 25.463251271427158, 20.741431916405503, 14.701971772743928, 9.095131625674611, 5.103062810600439, 2.958584640794253, 2.0770630424402197, 1.5089864948976657, 1.0753475813390936, 0.7402054082027469, 0.47971369521984386, 0.2983402161659746, 0.1814918238688521, 0.10933001835662445, 0.06611608895709498, 0.03954992731450152, 0.02321617135512246, 0.01333343570719999]

# 5k
rv_d[1] = [8.268537448525754e-14, 1.657279046932784e-12, -6.171754652051885e-11, -6.85762836143541e-10, 3.5051986661570806e-08, -9.937659431698313e-07, 9.8647717478336e-05, 0.0017860944455890806, 0.00995042439843261, 0.03361227689329963, 0.09497865980353773, 0.23149657328903947, 0.4399739545901062, 0.7309697310585117, 1.2075768190604255, 2.019208330185887, 3.1495423480254208, 4.6175413642337855, 6.3777890045144705, 8.309357005820278, 10.348429406709194, 12.316110342758064, 14.183167677794131, 15.835423464713143, 16.749571939951792, 17.278928344467726, 18.034123628252427, 20.136774815702122, 24.623609670239787, 31.81520859633089, 39.843354598174756, 40.922289321407156, 36.10391822214047, 29.149463061157753, 19.24559145824768, 8.7079493471525, 1.5333269544312387, -1.9891317767075045, -2.588378647769622, -2.3106349861185653]
sv_d[1] = [-1.0301312231587088, 2.6898934373333114, 5.953662656031117, 9.600864181438247, 14.53816988798581, 21.027448270496496, 29.899338156821464, 46.621142149127316, 76.81632819290584, 116.1046754023391, 161.94354272339513, 202.02579838674927, 230.64187066400834, 256.7065434289204, 279.2505312890738, 280.9298941415691, 259.06022770479876, 230.23055720398946, 196.88135618659788, 183.16084906844395, 192.60161890118232, 191.97594488702555, 179.00332986822076, 185.63463298225753, 199.54116076082036, 173.77978917716786, 132.53444617845778, 90.22293875890455, 63.12145297923296, 45.158522962944375, 31.57700770849171, 21.814235906724516, 14.558664510560483, 9.288712801969513, 5.748779447122477, 3.4598549901552493, 2.0479002236697084, 1.196320196448555, 0.689799882551825, 0.39113045727023027]

# 2_5k
rv_d[2] = [-1.8455148678411854e-27, 3.471070310006768e-23, -1.4208770022076307e-18, 1.8269711227980614e-13, 1.4870634498936826e-09, 2.483588890835782e-07, 8.588484936831567e-06, 0.00010736801948774197, 0.0005622925926568622, 0.0018634119602549412, 0.00539434721579055, 0.013773925275377788, 0.025990312866633555, 0.042170150543683414, 0.07135516553991153, 0.12927618906793242, 0.2197255501123331, 0.3512912071546808, 0.518202331317551, 0.6917379030541188, 0.8763292968853179, 1.076791282847145, 1.3783303765263222, 1.7751579763253147, 1.989558897010764, 2.024666934143373, 1.9920876877170166, 2.0516762021426698, 2.3582798721259426, 3.0232230365139885, 4.49038865321228, 6.565514506767831, 7.557520886675337, 7.588369302797315, 7.0665149895970165, 6.035707426044714, 4.740752780712455, 3.4822519139948445, 2.541621326752147, 1.9468839113060434]
sv_d[2] = [4.667241544177847, 7.804750135813503, 11.754565806881894, 16.931783669021065, 23.63881150034615, 32.05126946699765, 42.29505493870924, 54.2229463890189, 67.1811629686157, 80.67617917732514, 93.88247539565381, 106.25876812343995, 117.90506320870959, 127.69485789992977, 134.92780379148454, 140.1610048430613, 144.86463693049998, 147.02147269795483, 146.12849043890762, 140.67909353891807, 128.53883551540582, 112.63556173101355, 94.98041997815417, 76.0644265213522, 55.3395047789621, 37.3805403887804, 24.534341179589767, 16.62182023781399, 12.134436237563671, 8.812922900875055, 6.2527867174079885, 4.272771003063569, 2.7631999453415803, 1.7246581205136435, 1.0474413319749112, 0.6227610558233391, 0.3658747858872694, 0.2110190688054544, 0.11937393366399346, 0.06625115978085994]

a_ratio_d = []

for i in range(3):

    plt.plot(time / 3600., rv_d[i] / np.max(sv_d[i]), marker_style[i], label=f'UoR_{lengthscale[i]}', lw=lw, ms=ms)
    area = simps(rv_d[i] / np.max(sv_d[i]), time / 3600.) / simps(sv_d[i] / np.max(sv_d[i]), time / 3600.)
    a_ratio_d.append(area)

plt.plot(time / 3600., sv_d[-1] / np.max(sv_d[-1]), 'k-', label=f'Soton', lw=lw, ms=ms)
plt.legend(loc='best')
plt.xlabel(r'Time [hours]', usetex=True)
plt.ylabel(r'Non-dimensionalised pollutant concentration [-]', usetex=True)
plt.title(r'Pollutant concentration over time at Soton and UoR', usetex=True)
plt.grid()
plt.tick_params(axis='both', direction='in')
# plt.savefig(f'{path}/report/figures/pollutant_data.eps', dpi=1000)
plt.show()

print(a_ratio_n)
print(a_ratio_r)
print(a_ratio_d)

_, _ = numerical_convergence(a_ratio_n)
_, _ = numerical_convergence(a_ratio_r)
_, _ = numerical_convergence(a_ratio_d)


# %%
"""
Lagrange polynomials in 1D
"""
p = 4
x_coords = np.linspace(-1, 1, num=100)
seg = RefSeg('GLL', p)
xi = seg.zeros

nodes = np.linspace(-1, 1, num=2)
nodes.shape = -1, 1
value = Lagrange1d(x_coords, xi)

for i in range(len(xi)):
    plt.plot(x_coords, value.transpose()[i], label=f'$h_{i}$' + r'$(x)$', lw=lw)

plt.plot(xi, np.zeros_like(xi), 'ko', ms=ms)
plt.legend(loc='lower right')
plt.xlabel(r'$x$', usetex=True)
plt.ylabel(r'$y$', usetex=True)
plt.xticks(xi.reshape(-1,), ['-1', '-0.655', '0', '0.655', '1'], usetex=True) # [str(i) for i in xi.reshape(-1,)]
plt.ylim([y_bottom, y_top])
plt.title(f'Lagrange polynomials up to order {len(xi) - 1}', usetex=True)
# plt.axhline(0, linestyle=':', color='black')
plt.grid(lw=.25)
plt.tick_params(axis='both' , direction='in')
# plt.savefig(f'{path}/report/figures/lagrange1d2.eps', dpi=1000)
plt.show()
